name: Push Events (Functions)

on:
  push:
    branches:
      - main
      - dev
    paths:
      - "src/functions/**"
      - ".github/workflows/push.functions.yml"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}-functions"
  cancel-in-progress: true

jobs:
  test-unit:
    name: Unit test
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: ‚éî Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm
          cache-dependency-path: src/functions/package-lock.json

      - name: üì• Download dependencies
        run: npm ci
        working-directory: src/functions

      - name: üß™ Run tests
        run: npm test
        working-directory: src/functions

  deploy-dev:
    name: Deploy to dev
    runs-on: ubuntu-latest
    needs: [test-unit]
    permissions:
      id-token: write
      contents: read
    environment:
      name: dev
    if: github.ref_name == 'dev'

    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v4
        with:
          show-progress: false

      - id: auth
        name: üóùÔ∏è Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: üöÄ Deploy Cloud Function
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@v3
        timeout-minutes: 10
        with:
          name: pdf
          runtime: nodejs20
          source_dir: src/functions
          memory: 512M
          entry_point: generate
          service_account: cloud-function-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
          service_timeout: "2m"
          environment_variables: |-
            BUCKET=${{ vars.BUCKET }}
            WATERMARK=true

  deploy-prod:
    name: Deploy to prod
    runs-on: ubuntu-latest
    needs: [test-unit]
    permissions:
      id-token: write
      contents: read
    environment:
      name: prod
    if: github.ref_name == 'main'

    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v4
        with:
          show-progress: false

      - id: auth
        name: üóùÔ∏è Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: üöÄ Deploy Cloud Function
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@v3
        with:
          name: pdf
          runtime: nodejs20
          source_dir: src/functions
          memory: 512M
          entry_point: generate
          service_account: cloud-function-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
          service_timeout: "2m"
          environment_variables: |-
            BUCKET=${{ vars.BUCKET }}
            WATERMARK=false
